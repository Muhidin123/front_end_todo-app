{"version":3,"sources":["actions/login.js","actions/notes.js","components/Login.js","components/SignUp.js","components/SingleCard.js","actions/update.js","components/NewNoteForm.js","actions/new.js","components/NoteCard.js","actions/delete.js","components/CardContainer.js","components/DefaultContainer.js","components/Nav.js","actions/sort.js","actions/search.js","App.js","reducers/login.js","reducers/SortSearchHelper.js","reducers/notes.js","reducers/index.js","index.js"],"names":["loginSuccess","user","type","notesFetchSuccess","notes","LoginForm","props","componentDidMount","handleChange","e","setState","target","name","value","handleSubmit","reqObj","method","headers","body","JSON","stringify","state","fetch","then","resp","json","data","error","localStorage","setItem","token","currentUser","history","push","username","password","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Form","size","onSubmit","this","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","Button","Message","href","React","Component","mapDispatchToProps","connect","SignUp","first_name","last_name","email","bio","TextArea","stateOptions","key","text","SingleCard","preventDefault","id","updateNote","goBack","rteChange","content","delta","source","editor","test","getHTML","description","handleChangeSelection","category","modules","toolbar","font","list","align","background","formats","bind","filteredNote","note","find","parseInt","match","params","title","completed","due_date","Field","label","control","theme","Dropdown","search","selection","options","onClick","handleClick","NewNoteForm","newNote","user_id","NoteCard","handleEdit","handleDelete","_data","delete","handleCompletedTodo","updatedNote","console","log","difference","moment","fromNow","className","dangerouslySetInnerHTML","__html","withRouter","CardContainer","length","map","DefaultContainer","Nav","toLowerCase","to","Menu","Item","sort","removeItem","option","input","App","getItem","Authorization","exact","path","render","component","loginReducer","action","sortNotes","order","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","notesReducer","n","filter","includes","combineReducers","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.87de869e.chunk.js","sourcesContent":["export const loginSuccess = user => {\n  return {\n    type: \"LOGIN_SUCCESS\",\n    user: user.user,\n  };\n};\n","export const notesFetchSuccess = notes => {\n  return {\n    type: \"NOTES_FETCH_SUCCESS\",\n    notes,\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { loginSuccess } from \"../actions/login\";\nimport { notesFetchSuccess } from \"../actions/notes\";\n\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      error: false,\n    };\n  }\n\n  componentDidMount = () => {};\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = () => {\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(this.state),\n    };\n\n    fetch(\"https://afternoon-harbor-70437.herokuapp.com/auth\", reqObj)\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.error) {\n          this.setState({\n            error: data.error,\n          });\n        } else {\n          localStorage.setItem(\"jwt\", data.user.token);\n          this.props.currentUser(data);\n          this.props.notes(data.notes);\n          this.props.history.push(\"/todos\");\n        }\n      });\n  };\n\n  render() {\n    return (\n      <Grid\n        textAlign='center'\n        style={{ height: \"100vh\" }}\n        verticalAlign='middle'\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            Log-in to your account\n          </Header>\n          <Form size='large' onSubmit={this.handleSubmit} error='false'>\n            <Segment stacked>\n              <Form.Input\n                fluid\n                icon='user'\n                iconPosition='left'\n                placeholder='username'\n                name='username'\n                onChange={e => {\n                  this.handleChange(e);\n                }}\n                error={this.state.error}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                name='password'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n                onChange={e => {\n                  this.handleChange(e);\n                }}\n                error={this.state.error}\n              />\n              <Button color='teal' fluid size='large'>\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <a href='/sign-up'>Sign Up</a>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  currentUser: loginSuccess,\n  notes: notesFetchSuccess,\n};\n\nexport default connect(null, mapDispatchToProps)(LoginForm);\n","import {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n  TextArea,\n} from \"semantic-ui-react\";\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { notesFetchSuccess } from \"../actions/notes\";\nimport { loginSuccess } from \"../actions/login\";\n\nclass SignUp extends React.Component {\n  state = {\n    user: {\n      first_name: \"\",\n      last_name: \"\",\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      bio: \"\",\n    },\n  };\n\n  handleChange = e => {\n    this.setState({\n      user: {\n        ...this.state.user,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  handleSubmit = () => {\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(this.state),\n    };\n\n    fetch(\"https://afternoon-harbor-70437.herokuapp.com/users\", reqObj)\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.error) {\n          this.props.history.push(\"/login\");\n        }\n        localStorage.setItem(\"jwt\", data.user.token);\n        this.props.currentUser(data);\n        this.props.notes(data.notes);\n        this.props.history.push(\"/todos\");\n      });\n  };\n\n  render() {\n    return (\n      <Grid\n        textAlign='center'\n        style={{ height: \"100vh\" }}\n        verticalAlign='middle'\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            {/* <Image src=\"/logo.png\" /> Log-in to your account */}\n            Sign-up to use App\n          </Header>\n          <Form size='large' onSubmit={this.handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name='first_name'\n                icon='user'\n                iconPosition='left'\n                placeholder='First Name'\n                onChange={e => {\n                  this.handleChange(e);\n                }}\n              />\n              <Form.Input\n                fluid\n                name='last_name'\n                icon='user'\n                iconPosition='left'\n                placeholder='Last Name'\n                onChange={e => {\n                  this.handleChange(e);\n                }}\n              />\n              <Form.Input\n                fluid\n                name='username'\n                icon='user'\n                iconPosition='left'\n                placeholder='Username'\n                onChange={e => {\n                  this.handleChange(e);\n                }}\n              />\n              <Form.Input\n                fluid\n                icon='mail'\n                name='email'\n                iconPosition='left'\n                placeholder='E-mail address'\n                onChange={e => {\n                  this.handleChange(e);\n                }}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n                name='password'\n                type='password'\n                onChange={e => {\n                  this.handleChange(e);\n                }}\n              />\n              <TextArea\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Tell us about yourself'\n                name='bio'\n                onChange={e => {\n                  this.handleChange(e);\n                }}\n              />\n\n              <Button color='teal' fluid size='large'>\n                Sign-up\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            Back to Login? <a href='/login'>Login</a>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  currentUser: loginSuccess,\n  notes: notesFetchSuccess,\n};\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n","import React, { Component } from \"react\";\nimport { Form, Segment, Button, Grid, Dropdown } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { updateNotesSuccess } from \"../actions/update\";\nimport { loginSuccess } from \"../actions/login\";\nimport { notesFetchSuccess } from \"../actions/notes\";\n\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport \"react-quill/dist/quill.bubble.css\";\n\nconst stateOptions = [\n  {\n    key: \"whatever\",\n    text: \"Whatever\",\n    value: \"whatever\",\n  },\n  {\n    key: \"work\",\n    text: \"Work\",\n    value: \"work\",\n  },\n  {\n    key: \"just cuz\",\n    text: \"Just cuz\",\n    value: \"just cuz\",\n  },\n  {\n    key: \"fun\",\n    text: \"Fun\",\n    value: \"fun\",\n  },\n];\n\nclass SingleCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.modules = {\n      toolbar: [\n        [{ font: [] }],\n        [{ size: [\"small\", false, \"large\", \"huge\"] }],\n        [\"bold\", \"italic\", \"underline\"],\n        [{ list: \"ordered\" }, { list: \"bullet\" }],\n        [{ align: [] }],\n        [{ color: [] }, { background: [] }],\n        [\"clean\"],\n      ],\n    };\n\n    this.formats = [\n      \"font\",\n      \"size\",\n      \"bold\",\n      \"italic\",\n      \"underline\",\n      \"list\",\n      \"bullet\",\n      \"align\",\n      \"color\",\n      \"background\",\n    ];\n\n    this.rteChange = this.rteChange.bind(this);\n    this.filteredNote = this.props.note.find(note => {\n      return note.id === parseInt(this.props.match.params.id);\n    });\n\n    this.state = {\n      id: this.filteredNote.id,\n      title: this.filteredNote.title,\n      description: this.filteredNote.description,\n      completed: this.filteredNote.completed,\n      due_date: this.filteredNote.due_date,\n      category: {},\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const reqObj = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(this.state),\n    };\n\n    fetch(\n      `https://afternoon-harbor-70437.herokuapp.com/notes/${this.state.id}`,\n      reqObj\n    )\n      .then(resp => resp.json())\n      .then(data => {\n        this.props.updateNote(data);\n        this.props.history.goBack();\n      });\n  };\n\n  rteChange = (content, delta, source, editor) => {\n    let test = editor.getHTML();\n\n    this.setState({\n      description: test,\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleChangeSelection = (e, { value }) => this.setState({ category: value });\n\n  render() {\n    return (\n      <div>\n        <Grid\n          textAlign='center'\n          style={{ height: \"50vh\" }}\n          verticalAlign='middle'\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Segment stacked>\n              <Form onSubmit={this.handleSubmit} size='large'>\n                <Form.Field\n                  label='Title'\n                  value={this.state.title}\n                  control='input'\n                  placeholder='Add title here'\n                  onChange={this.handleChange}\n                  name='title'\n                />\n                <ReactQuill\n                  label='Description'\n                  theme='snow'\n                  modules={this.modules}\n                  formats={this.formats}\n                  onChange={this.rteChange}\n                  value={this.state.description}\n                />\n                <Dropdown\n                  placeholder='Category'\n                  fluid\n                  search\n                  selection\n                  options={stateOptions}\n                  onChange={this.handleChangeSelection}\n                />\n                <input\n                  type='date'\n                  name='due_date'\n                  id='date'\n                  onChange={this.handleChange}\n                />\n                <Button\n                  color='teal'\n                  fluid\n                  size='large'\n                  type='submit'\n                  onClick={this.handleClick}\n                >\n                  Edit\n                </Button>\n              </Form>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    note: state.notes,\n  };\n};\n\nconst mapDispatchToProps = {\n  updateNote: updateNotesSuccess,\n  currentUser: loginSuccess,\n  notes: notesFetchSuccess,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleCard);\n","export const updateNotesSuccess = note => {\n  return {\n    type: \"UPDATE_NOTE_SUCCESS\",\n    note,\n  };\n};\n","import React, { Component } from \"react\";\nimport { Form, Segment, Button, Grid, Dropdown } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { newNoteSuccess } from \"../actions/new\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport \"react-quill/dist/quill.bubble.css\";\n\nconst stateOptions = [\n  {\n    key: \"whatever\",\n    text: \"whatever\",\n    value: \"whatever\",\n  },\n  {\n    key: \"work\",\n    text: \"Work\",\n    value: \"work\",\n  },\n  {\n    key: \"just cuz\",\n    text: \"Just cuz\",\n    value: \"just cuz\",\n  },\n  {\n    key: \"fun\",\n    text: \"Fun\",\n    value: \"fun\",\n  },\n];\n\nclass NewNoteForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      completed: false,\n      user_id: this.props.user,\n      category: \"\",\n      due_date: \"\",\n    };\n\n    this.modules = {\n      toolbar: [\n        [{ font: [] }],\n        [{ size: [\"small\", false, \"large\", \"huge\"] }],\n        [\"bold\", \"italic\", \"underline\"],\n        [{ list: \"ordered\" }, { list: \"bullet\" }],\n        [{ align: [] }],\n        [{ color: [] }, { background: [] }],\n        [\"clean\"],\n      ],\n    };\n\n    this.formats = [\n      \"font\",\n      \"size\",\n      \"bold\",\n      \"italic\",\n      \"underline\",\n      \"list\",\n      \"bullet\",\n      \"align\",\n      \"color\",\n      \"background\",\n    ];\n\n    this.rteChange = this.rteChange.bind(this);\n  }\n\n  rteChange = (content, delta, source, editor) => {\n    let test = editor.getHTML();\n\n    this.setState({\n      description: test,\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = () => {\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(this.state),\n    };\n\n    fetch(\"https://afternoon-harbor-70437.herokuapp.com/notes\", reqObj)\n      .then(resp => resp.json())\n      .then(note => {\n        this.props.newNote(note);\n        this.props.history.push(\"/todos\");\n      });\n  };\n\n  handleChangeSelection = (e, { value }) => {\n    return this.setState({ category: value });\n  };\n\n  render() {\n    const { category } = this.state;\n    return (\n      <div>\n        <Grid\n          textAlign='center'\n          style={{ height: \"50vh\" }}\n          verticalAlign='middle'\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Segment stacked>\n              <Form onSubmit={this.handleSubmit} size='large'>\n                <Form.Field\n                  control='input'\n                  placeholder='Add title here'\n                  onChange={this.handleChange}\n                  name='title'\n                />\n                <ReactQuill\n                  theme='snow'\n                  modules={this.modules}\n                  formats={this.formats}\n                  onChange={this.rteChange}\n                  value={this.state.description || \"\"}\n                  placeholder='Add your description here'\n                />\n                <br />\n                <Dropdown\n                  placeholder='Category'\n                  fluid\n                  search\n                  selection\n                  options={stateOptions}\n                  value={category}\n                  onChange={this.handleChangeSelection}\n                />\n                <br />\n                <input\n                  type='date'\n                  name='due_date'\n                  id='date'\n                  onChange={this.handleChange}\n                />\n\n                <Button color='teal' fluid size='large' type='submit'>\n                  Add new note\n                </Button>\n              </Form>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.currentUser.id,\n  };\n};\n\nconst mapDispatchToProps = {\n  newNote: newNoteSuccess,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewNoteForm);\n","export const newNoteSuccess = note => {\n  return {\n    type: \"NEW_NOTE_SUCCESS\",\n    note,\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteNoteSuccess } from \"../actions/delete\";\nimport { withRouter } from \"react-router-dom\";\nimport moment from \"moment\";\n\nclass NoteCard extends React.Component {\n  constructor(props) {\n    super(props);\n    const { id, title, description, completed } = this.props.note;\n\n    this.state = {\n      id,\n      title,\n      description,\n      completed,\n    };\n  }\n\n  handleEdit = () => {\n    const { id } = this.props.note;\n\n    this.props.history.push(`/todos/edit/${id}`);\n  };\n\n  handleDelete = () => {\n    const { id } = this.props.note;\n\n    const reqObj = {\n      method: \"DELETE\",\n    };\n    fetch(\n      `https://afternoon-harbor-70437.herokuapp.com/notes/${id}`,\n      reqObj\n    ).then(_data => {\n      this.props.delete(id);\n    });\n  };\n\n  handleCompletedTodo = () => {\n    const { id } = this.state;\n\n    const updatedNote = {\n      ...this.state,\n      completed: !this.state.completed,\n    };\n\n    const reqObj = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updatedNote),\n    };\n\n    fetch(`https://afternoon-harbor-70437.herokuapp.com/notes/${id}`, reqObj)\n      .then(resp => resp.json())\n      .then(data => {\n        console.log(data);\n        const { id, title, description, completed } = data;\n        this.setState({\n          id,\n          title,\n          description,\n          completed,\n        });\n      });\n  };\n\n  render() {\n    let difference = moment(`${this.props.note[\"created_at\"]}`).fromNow();\n    const { title, description, completed } = this.state;\n\n    return (\n      <div className='ui raised card'>\n        <div\n          className={\n            completed\n              ? \"ui bottom aligned active inverted dimmer\"\n              : \"ui bottom aligned  dimmer\"\n          }\n        >\n          <div className='content'>\n            <div className='ui animated fade  secondary button' color='red'>\n              <div className='visible content'>\n                Changed my mind not completed\n              </div>\n              <div\n                className='hidden content'\n                onClick={this.handleCompletedTodo}\n              >\n                <i className='calendar times icon'></i>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='content'>\n          <div className='meta'>{difference}</div>\n          <br />\n          <div className='header'>{title}</div>\n          <br />\n          <div\n            className='description'\n            dangerouslySetInnerHTML={{ __html: description }}\n          ></div>\n        </div>\n        <div className='extra content'>\n          <i className='check icon'></i>\n          Due: {this.props.note.due_date}\n          <div className='right floated author'>\n            <i className='user circle icon'></i>\n            {this.props.name.name}\n          </div>\n        </div>\n        <div className='ui two buttons'>\n          <div className='ui basic green button' onClick={this.handleEdit}>\n            EDIT\n          </div>\n          <div className='ui basic red button' onClick={this.handleDelete}>\n            DELETE\n          </div>\n        </div>\n        <div\n          className='ui bottom attached button'\n          onClick={this.handleCompletedTodo}\n        >\n          COMPLETED\n          <div className='right floated author'>\n            <i className='calendar check icon'></i>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = {\n  delete: deleteNoteSuccess,\n};\n\nexport default connect(null, mapDispatchToProps)(withRouter(NoteCard));\n","export const deleteNoteSuccess = id => {\n  return {\n    type: \"NOTE_DELETE_SUCCESS\",\n    id,\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport NoteCard from \"./NoteCard\";\nimport \"./index.css\";\n\nclass CardContainer extends Component {\n  render() {\n    return (\n      <>\n        {this.props.notes && this.props.notes.length > 0 ? (\n          <div className='ui four doubling  cards'>\n            {this.props.notes.map(note => {\n              return (\n                <NoteCard note={note} key={note.id} name={this.props.user} />\n              );\n            })}\n          </div>\n        ) : (\n          <div className='container'>\n            <div className='child'>\n              <h1>Nothing to display</h1>\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    notes: state.notes,\n    user: state.currentUser,\n  };\n};\n\nexport default connect(mapStateToProps, null)(CardContainer);\n","import React, { Component } from \"react\";\nimport CardContainer from \"./CardContainer\";\nimport { connect } from \"react-redux\";\n\n\nclass DefaultContainer extends Component {\n  render() {\n    return (\n      <div>\n        <CardContainer />\n      </div>\n    );\n  }\n}\n\nexport default connect(null, null)(DefaultContainer);\n","import { Link } from \"react-router-dom\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\n\nimport React, { Component } from \"react\";\nimport { sortNotesSuccess } from \"../actions/sort\";\nimport { searchNotesSuccess } from \"../actions/search\";\n\nclass Nav extends Component {\n  handleChange = e => {\n    this.props.search(e.target.value.toLowerCase());\n  };\n\n  render() {\n    return (\n      <div className='ui secondary menu'>\n        <Link to='/todos' className='item'>\n          HOME\n        </Link>\n        <Link to='/todos/new' className='item'>\n          NEW NOTE\n        </Link>\n        <Dropdown text='Sort by' className='item'>\n          <Dropdown.Menu>\n            <Dropdown.Item\n              text='A - Z'\n              onClick={() => {\n                this.props.sort(\"title\");\n              }}\n            />\n            <Dropdown.Item\n              text='Z - A'\n              onClick={() => {\n                this.props.sort(\"title\", \"desc\");\n              }}\n            />\n          </Dropdown.Menu>\n        </Dropdown>\n        <div className='right menu'>\n          <div className='item'>\n            <div className='ui icon input'>\n              <input\n                type='text'\n                placeholder='Search...'\n                onChange={this.handleChange}\n              />\n              <i className='search link icon'></i>\n            </div>\n          </div>\n\n          <Link\n            to='/login'\n            className='ui item'\n            onClick={() => {\n              localStorage.removeItem(\"jwt\");\n            }}\n          >\n            LOGOUT\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  sort: sortNotesSuccess,\n  search: searchNotesSuccess,\n};\n\nexport default connect(null, mapDispatchToProps)(Nav);\n","export const sortNotesSuccess = (key, option = \"asc\") => {\n  return {\n    type: \"SORT_NOTES_SUCCESS\",\n    key,\n    option,\n  };\n};\n","export const searchNotesSuccess = input => {\n    return {\n      type: \"SEARCH_NOTES_SUCCESS\",\n      input,\n    };\n  };\n  ","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport LoginForm from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport SingleCard from \"./components/SingleCard\";\nimport NewNoteForm from \"./components/NewNoteForm\";\nimport { loginSuccess } from \"./actions/login\";\nimport { notesFetchSuccess } from \"./actions/notes\";\nimport DefaultContainer from \"./components/DefaultContainer\";\nimport Nav from \"./components/Nav\";\n\nclass App extends Component {\n  componentDidMount() {\n    const token = localStorage.getItem(\"jwt\");\n\n    if (!token) {\n      console.log(\"No token\");\n      this.props.history.push(\"/login\");\n    } else {\n      const reqObj = {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      };\n\n      fetch(\"https://afternoon-harbor-70437.herokuapp.com/current_user\", reqObj)\n        .then(resp => resp.json())\n        .then(data => {\n          this.props.currentUser(data);\n          this.props.notes(data.notes);\n          this.props.history.push(\"/todos\");\n        });\n    }\n  }\n  render() {\n    const token = localStorage.getItem(\"jwt\");\n\n    return (\n      <div id='test'>\n        <Router>\n          {token ? <Nav /> : null}\n          <Switch>\n            <Route exact path='/' render={() => <Redirect to='/login' />} />\n            <Route path='/login' component={LoginForm} />\n            <Route path='/sign-up' component={SignUp} />\n            <Route exact path='/todos' component={DefaultContainer} />\n            <Route exact path='/todos/edit/:id' component={SingleCard} />\n            <Route exact path='/todos/new' component={NewNoteForm} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  currentUser: loginSuccess,\n  notes: notesFetchSuccess,\n};\n\nexport default connect(null, mapDispatchToProps)(withRouter(App));\n","const loginReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return action.user;\n\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","const sortNotes = (key, order = \"asc\") => {\n  return function innerSort(a, b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n      // property doesn't exist on either object\n      return 0;\n    }\n\n    const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\n    const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\n\n    let comparison = 0;\n    if (varA > varB) {\n      comparison = 1;\n    } else if (varA < varB) {\n      comparison = -1;\n    }\n    return order === \"desc\" ? comparison * -1 : comparison;\n  };\n};\n\nexport default sortNotes;\n","import sortNotes from \"./SortSearchHelper\";\n\nconst notesReducer = (state = [], action) => {\n  let updatedNotes = [];\n  switch (action.type) {\n    case \"NOTES_FETCH_SUCCESS\":\n      return action.notes;\n    case \"UPDATE_NOTE_SUCCESS\":\n      updatedNotes = state.map(n => {\n        if (n.id === action.note.id) {\n          return action.note;\n        } else {\n          return n;\n        }\n      });\n      return updatedNotes;\n    case \"NOTE_DELETE_SUCCESS\":\n      updatedNotes = state.filter(n => n.id !== action.id);\n      return updatedNotes;\n    case \"NEW_NOTE_SUCCESS\":\n      return [...state, action.note];\n    case \"SORT_NOTES_SUCCESS\":\n      updatedNotes = [...state.sort(sortNotes(action.key, action.option))];\n      return updatedNotes;\n    case \"SEARCH_NOTES_SUCCESS\":\n      updatedNotes = [\n        ...state.filter(note =>\n          note.title.toLowerCase().includes(action.input) || note.description.toLowerCase().includes(action.input)\n        ),\n      ];\n      return updatedNotes;\n\n    default:\n      return state;\n  }\n};\n\nexport default notesReducer;\n","import { combineReducers } from \"redux\";\nimport loginReducer from \"./login\";\nimport notesReducer from \"./notes\";\n\nexport default combineReducers({\n  currentUser: loginReducer,\n  notes: notesReducer\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers/index\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}