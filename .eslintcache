[{"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/Login.js":"1","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/NoteCard.js":"2","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/App.js":"3","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/index.js":"4","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/actions/notes.js":"5","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/SignUp.js":"6","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/SingleCard.js":"7","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/actions/login.js":"8","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/NewNoteForm.js":"9","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/CardContainer.js":"10","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/reducers/login.js":"11","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/actions/delete.js":"12","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/reducers/notes.js":"13","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/RichEditor.js":"14","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/reducers/index.js":"15","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/Nav.js":"16","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/actions/update.js":"17","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/DefaultContainer.js":"18","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/actions/new.js":"19","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/reducers/SortSearchHelper.js":"20"},{"size":2787,"mtime":1611796096527,"results":"21","hashOfConfig":"22"},{"size":3382,"mtime":1611798878607,"results":"23","hashOfConfig":"22"},{"size":2190,"mtime":1611802882432,"results":"24","hashOfConfig":"22"},{"size":863,"mtime":1611802613430,"results":"25","hashOfConfig":"22"},{"size":107,"mtime":1611642292813,"results":"26","hashOfConfig":"22"},{"size":3927,"mtime":1611778760976,"results":"27","hashOfConfig":"22"},{"size":3258,"mtime":1611798915586,"results":"28","hashOfConfig":"22"},{"size":105,"mtime":1611642292812,"results":"29","hashOfConfig":"22"},{"size":2887,"mtime":1611798897979,"results":"30","hashOfConfig":"22"},{"size":893,"mtime":1611798835696,"results":"31","hashOfConfig":"22"},{"size":195,"mtime":1611798823960,"results":"32","hashOfConfig":"22"},{"size":101,"mtime":1611676773904,"results":"33","hashOfConfig":"22"},{"size":810,"mtime":1611799155648,"results":"34","hashOfConfig":"22"},{"size":1271,"mtime":1611775208785,"results":"35","hashOfConfig":"22"},{"size":202,"mtime":1611642292817,"results":"36","hashOfConfig":"22"},{"size":1982,"mtime":1611798526168,"results":"37","hashOfConfig":"22"},{"size":106,"mtime":1611685921577,"results":"38","hashOfConfig":"22"},{"size":422,"mtime":1611800757033,"results":"39","hashOfConfig":"22"},{"size":99,"mtime":1611685959836,"results":"40","hashOfConfig":"22"},{"size":590,"mtime":1611797232189,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"f2yvgv",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/Login.js",[],["94","95"],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/NoteCard.js",[],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/App.js",[],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/index.js",[],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/actions/notes.js",[],["96","97"],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/SignUp.js",[],["98","99"],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/SingleCard.js",["100"],"import React, { Component } from \"react\";\nimport {\n  TextArea,\n  Form,\n  Segment,\n  Button,\n  Grid,\n  Dropdown,\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { updateNotesSuccess } from \"../actions/update\";\nconst stateOptions = [\n  {\n    key: \"whatever\",\n    text: \"whatever\",\n    value: \"whatever\",\n  },\n  {\n    key: \"work\",\n    text: \"Work\",\n    value: \"work\",\n  },\n  {\n    key: \"just cuz\",\n    text: \"Just cuz\",\n    value: \"just cuz\",\n  },\n  {\n    key: \"fun\",\n    text: \"Fun\",\n    value: \"fun\",\n  },\n];\n\nclass SingleCard extends Component {\n  constructor(props) {\n    super(props);\n\n    let filteredNote = this.props.note.find(note => {\n      return note.id == this.props.match.params.id;\n    });\n\n    this.state = {\n      id: filteredNote.id,\n      title: filteredNote.title,\n      description: filteredNote.description,\n      completed: filteredNote.completed,\n      category: {},\n    };\n  }\n\n  componentDidMount = () => {\n    console.log(this.props);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const reqObj = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(this.state),\n    };\n\n    fetch(`http://localhost:3000/notes/${this.state.id}`, reqObj)\n      .then(resp => resp.json())\n      .then(data => {\n        console.log(data);\n        this.props.updateNote(data);\n        this.props.history.goBack();\n      });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleChangeSelection = (e, { value }) => this.setState({ category: value });\n\n  render() {\n    return (\n      <div>\n        <Grid\n          textAlign='center'\n          style={{ height: \"50vh\" }}\n          verticalAlign='middle'\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Segment stacked>\n              <Form onSubmit={this.handleSubmit} size='large'>\n                <Form.Field\n                  label='Title'\n                  value={this.state.title}\n                  control='input'\n                  placeholder='Add title here'\n                  onChange={this.handleChange}\n                  name='title'\n                />\n                <TextArea\n                  placeholder=''\n                  value={this.state.description}\n                  onChange={this.handleChange}\n                  name='description'\n                />\n                <Dropdown\n                  placeholder='Category'\n                  fluid\n                  search\n                  selection\n                  options={stateOptions}\n                  onChange={this.handleChangeSelection}\n                />\n                <Button\n                  color='teal'\n                  fluid\n                  size='large'\n                  type='submit'\n                  onClick={this.handleClick}\n                >\n                  Edit\n                </Button>\n              </Form>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    note: state.notes,\n  };\n};\n\nconst mapDispatchToProps = {\n  updateNote: updateNotesSuccess,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleCard);\n",["101","102"],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/actions/login.js",[],["103","104"],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/NewNoteForm.js",["105"],"import React, { Component } from \"react\";\nimport {\n  TextArea,\n  Form,\n  Segment,\n  Button,\n  Grid,\n  Dropdown,\n} from \"semantic-ui-react\";\nimport Nav from \"./Nav\";\nimport { connect } from \"react-redux\";\nimport { newNoteSuccess } from \"../actions/new\";\n\nconst stateOptions = [\n  {\n    key: \"whatever\",\n    text: \"whatever\",\n    value: \"whatever\",\n  },\n  {\n    key: \"work\",\n    text: \"Work\",\n    value: \"work\",\n  },\n  {\n    key: \"just cuz\",\n    text: \"Just cuz\",\n    value: \"just cuz\",\n  },\n  {\n    key: \"fun\",\n    text: \"Fun\",\n    value: \"fun\",\n  },\n];\n\nclass NewNoteForm extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    completed: false,\n    user_id: this.props.user,\n    category: \"\",\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = () => {\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(this.state),\n    };\n\n    fetch(\"http://localhost:3000/notes\", reqObj)\n      .then(resp => resp.json())\n      .then(note => {\n        console.log(note);\n        this.props.newNote(note);\n        this.props.history.push(\"/todos\");\n      });\n  };\n\n  handleChangeSelection = (e, { value }) => {\n    console.log(this.state);\n    return this.setState({ category: value });\n  };\n\n  render() {\n    const { category } = this.state;\n    return (\n      <div>\n        {/* <Nav /> */}\n        <Grid\n          textAlign='center'\n          style={{ height: \"50vh\" }}\n          verticalAlign='middle'\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Segment stacked>\n              <Form onSubmit={this.handleSubmit} size='large'>\n                <Form.Field\n                  control='input'\n                  placeholder='Add title here'\n                  onChange={this.handleChange}\n                  name='title'\n                />\n                <TextArea\n                  placeholder='Add description here'\n                  onChange={this.handleChange}\n                  name='description'\n                  rows='5'\n                />\n                <Dropdown\n                  placeholder='Category'\n                  fluid\n                  search\n                  selection\n                  options={stateOptions}\n                  value={category}\n                  onChange={this.handleChangeSelection}\n                />\n                <Button color='teal' fluid size='large' type='submit'>\n                  Add new note\n                </Button>\n              </Form>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.currentUser.id,\n  };\n};\n\nconst mapDispatchToProps = {\n  newNote: newNoteSuccess,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewNoteForm);\n",["106","107"],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/CardContainer.js",[],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/reducers/login.js",[],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/actions/delete.js",[],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/reducers/notes.js",[],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/RichEditor.js",[],["108","109"],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/reducers/index.js",[],["110","111"],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/Nav.js",[],["112","113"],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/actions/update.js",[],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/components/DefaultContainer.js",["114"],"import React, { Component } from \"react\";\nimport CardContainer from \"./CardContainer\";\nimport { connect } from \"react-redux\";\n\nimport notesReducer from \"../reducers/notes\";\n\nclass DefaultContainer extends Component {\n  render() {\n    return (\n      <div>\n        <CardContainer />\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = {\n//   note: notesReducer,\n// };\nexport default connect(null, null)(DefaultContainer);\n","/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/actions/new.js",[],"/Users/muhidinhukic/Flatiron/code/todo-app/front_end_todo/src/reducers/SortSearchHelper.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"115","replacedBy":"119"},{"ruleId":"117","replacedBy":"120"},{"ruleId":"115","replacedBy":"121"},{"ruleId":"117","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":40,"column":22,"nodeType":"125","messageId":"126","endLine":40,"endColumn":24},{"ruleId":"115","replacedBy":"127"},{"ruleId":"117","replacedBy":"128"},{"ruleId":"115","replacedBy":"129"},{"ruleId":"117","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":10,"column":8,"nodeType":"133","messageId":"134","endLine":10,"endColumn":11},{"ruleId":"115","replacedBy":"135"},{"ruleId":"117","replacedBy":"136"},{"ruleId":"115","replacedBy":"137"},{"ruleId":"117","replacedBy":"138"},{"ruleId":"115","replacedBy":"139"},{"ruleId":"117","replacedBy":"140"},{"ruleId":"115","replacedBy":"141"},{"ruleId":"117","replacedBy":"142"},{"ruleId":"131","severity":1,"message":"143","line":5,"column":8,"nodeType":"133","messageId":"134","endLine":5,"endColumn":20},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],["144"],["145"],["144"],["145"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["144"],["145"],["144"],["145"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar",["144"],["145"],["144"],["145"],["144"],["145"],["144"],["145"],"'notesReducer' is defined but never used.","no-global-assign","no-unsafe-negation"]